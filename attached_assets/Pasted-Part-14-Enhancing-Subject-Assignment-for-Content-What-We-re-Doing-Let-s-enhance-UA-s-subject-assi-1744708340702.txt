Part 14: Enhancing Subject Assignment for Content
What We’re Doing
Let’s enhance UA’s subject assignment to link faculty to content, like assigning a teacher to a class bookshelf! This is an enhancement of UA’s /assign-subject (already implemented), ensuring faculty uploads are tied to subjects in CM. We’ll add an “Assign Subject” button to the dashboard from Part 13, with a fading book icon.
What We Need 
•	Add an “Assign Subject” button and form (faculty ID, subject name) to the dashboard. 
•	Extend UA’s /assign-subject endpoint to update CM’s “content” table (link uploads to subjects_faculty). 
•	Log assignments in UA’s “audit_log” (e.g., “Admin assigned CSE - Faculty A”). 
•	A “fadeInUp” animation for the button and a FontAwesome book icon.
Who Can Do What 
•	Students: 
o	Can: Watch/download files for their subjects. 
o	Can’t: Assign subjects or see the dashboard. 
o	Understands: “Your files are sorted by class!”
•	Faculty: 
o	Can: Upload, edit, delete files, see analytics, use tags for assigned subjects. 
o	Can’t: Assign subjects or use admin tools. 
o	Understands: “Your class is ready to share!”
•	Admins: 
o	Can: Sync/delete students, add faculty, assign subjects for content uploads. 
o	Can’t: Unassign subjects yet—almost done! 
o	Understands: “Link teachers to classes for files!”
Tools Needed 
•	Frontend: React.js (Next.js) for the dashboard, TailwindCSS for styling, Animate.css for “fadeInUp” effect, FontAwesome for a book icon (fa-book). 
•	Backend: FastAPI to extend UA’s /assign-subject, SQLite for updates. 
•	Database: SQLite for UA’s “users” and CM’s “content”. 
•	Storage: None—just assignments. 
•	AI Tools: None—just linking subjects. 
•	Tech Stack Rule: Use only these tools. Any changes need my approval first.
Strict Mandate for Replit AI
Dear Replit AI, you must always use real, fully functional implementations for all tools, technologies, frameworks, and APIs, including AI, ML, DL, DS, CV, and others. Simulated, mocked, fake, placeholder, hardcoded, or dummy responses are strictly forbidden. All computations, data processing, and API calls must be genuine, executed in real-time with actual systems, producing verifiable results. This rule is absolute and enforced for every operation, with no exceptions.
Think Step by Step 
1.	Design the subject assignment form and button. 
2.	Extend UA’s /assign-subject for CM content linking. 
3.	Ensure “audit_log” tracks assignments. 
4.	Choose “fadeInUp” animation and book icon for a smooth UX. 
5.	Ensure high-end CSS, alignment, colors, icons, and spacing—delightful for all users, even kids.
UX Mandate
All pages must have proper styling, alignment, structure, high-end animations (used sparingly, only where needed), good colors, and FontAwesome icons. The UX should delight users, and even a child should understand it.
Why It’s Cool
The fading button organizes content neatly, enhancing UA for a perfect library!

1.	let us start part <14> . of CONTENT MANAGEMENT MODULE first prepare a plan which is single unified plan without subplans so your  plan should contain all those functionalities and all tools Technologies mentioned for that part. 
2.	first provide a plan as mentioned and ask for approval before starting the implementation of that part
3.	 implementation plan should contain REAL front end, back end , database, AI  tools simultaneously. 
4.	If u change any technology tool api framework etc in the plan mention the reason for change clearly and tool  and  must take my approval before implementation 
5.	avoid redoing of work always check what has be done so far 
6.	avoid mentioning of any timelines or durations in the plan.
7.	Use a table to show which tool has been used and any replacement mention  it with reason
8.	avoid redoing of work always check what has be done so far


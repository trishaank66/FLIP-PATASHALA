Part 4: Faculty Uploading Content
What We’re Doing
Let’s let faculty upload videos, notes, and slideshows, like sharing their teaching secrets! This is a new CM feature, creating a faculty content page linked from the Home Page’s “Content” tile, building on student access, with a pulsing drag-and-drop area to invite uploads.
What We Need 
•	A faculty content page with a drag-and-drop upload area and “Upload” button. 
•	An /upload-content endpoint to save files, tied to UA’s subjects_faculty (e.g., “CSE - Faculty A”). 
•	Store files in the “content” table with uploaded_by, dept_id, and type (MP4/PDF/PPT). 
•	A “pulse” animation for the upload area and a FontAwesome upload icon.
Who Can Do What 
•	Students: 
o	Can: Watch/download their group’s files. 
o	Can’t: Upload or see faculty pages. 
o	Understands: “New files are coming for you!”
•	Faculty: 
o	Can: Click “Content” on the Home Page, upload files for their subjects. 
o	Can’t: Upload for other groups or manage users. 
o	Understands: “Drop your videos here to teach!”
•	Admins: 
o	Can: Log in (controls soon). 
o	Can’t: Upload faculty content yet. 
o	Understands: “Faculty will fill the library soon!”
Tools Needed 
•	Frontend: React.js (Next.js) for the faculty page, TailwindCSS for styling, Animate.css for “pulse” effect, FontAwesome for an upload icon (fa-cloud-upload-alt). 
•	Backend: FastAPI for /upload-content, SQLite for storage. 
•	Database: SQLite for “content” table, uses UA’s “users” for subjects_faculty. 
•	Storage: SQLite BLOB/filesystem for files (max 50MB). 
•	AI Tools: None—just uploading. 
•	Tech Stack Rule: Use only these tools. Any changes need my approval first.
Strict Mandate for Replit AI
Dear Replit AI, you must always use real, fully functional implementations for all tools, technologies, frameworks, and APIs, including AI, ML, DL, DS, CV, and others. Simulated, mocked, fake, placeholder, hardcoded, or dummy responses are strictly forbidden. All computations, data processing, and API calls must be genuine, executed in real-time with actual systems, producing verifiable results. This rule is absolute and enforced for every operation, with no exceptions.
Think Step by Step 
1.	Design the faculty upload page with drag-and-drop. 
2.	Plan the /upload-content endpoint, validating via UA’s subjects_faculty. 
3.	Update “content” table for uploads. 
4.	Choose “pulse” animation and upload icon for an inviting UX. 
5.	Ensure high-end CSS, alignment, colors, icons, and spacing—delightful for all users, even kids.
UX Mandate
All pages must have proper styling, alignment, structure, high-end animations (used sparingly, only where needed), good colors, and FontAwesome icons. The UX should delight users, and even a child should understand it.
Why It’s Cool
The pulsing upload area makes sharing feel like a breeze, letting faculty add magic to Flipped Patashala!
let us start part <3> . of CONTENT MANAGEMENT MODULE  i.e faculty uploading content first prepare a plan which is single unified plan without subplans which contains all real tools Api’s frameworks as mentioned in that part information. so you are plan should contain all those functionalities and all tools Technologies mention for that part. first provide a plan as mentioned and ask for approval before starting the implementation of that part implementation plan should contain REAL front end, back end , database, AI  tools simultaneously. 

If u change any technology tool in the plan mention the reason for change clearly and  must take my approval before implementation
strictly avoid redoing of work always check what has be done so far
